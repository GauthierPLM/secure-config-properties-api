#%RAML 1.0
title: Secure Properties API
description: API to encrypt and decrypt MuleSoft properties
baseUri: http://localhost:8081/api
version: 1.0.0

types:
  configuraiton:
    description: Configuration of the application
    type: object
    properties:
      defaultAlgorithm:
        displayName: Default Algorithm
        description: Specify default algorithm to select from UI.
        type: string
        default: AES
        enum: [AES, Blowfish, DES, DESede, RC2, RCA]
      defaultMode:
        displayName: Default Mode
        description: Specify default mode to select from UI.
        type: string
        default: CBC
        enum: [CBC, CFB, ECB, OFB]
      allowDecryption:
        displayName: Allow Decryption
        description: Allow decryption of content. False by default to avoid security issues.
        type: boolean
        default: false
      encryptionKeyFromUser:
        displayName: Get Encryption Key From User
        description: Allow the user to specify the encryption key.
        type: boolean
        default: true

  property:
    description: Encrypted/decrypted property
    type: object
    properties:
      property:
        type: string

/configuration:
  get:
    responses:
      200:
        body:
          application/json:
            type: object
            example:
              defaultAlgorithm: "AES"
              defaultMode: "CBC"
              allowDecryption: false
              encryptionKeyFromUser: true

/string:
  displayName: Encrypt Text Strings
  description: Use the following to encrypt or decrypt a text string.
  post:
    body:
      multipart/form-data:
        properties:
          operation:
            displayName: Operation
            description: |
              Encrypt or decrypt a property value.
              Based on the API configuration, decrypting content might not be authorized.
            required: true
            default: encrypt
            type: string
            enum: [encrypt, decrypt]
          algorithm:
            displayName: Encryption Algorithm
            required: true
            default: AES
            type: string
            enum: [AES, Blowfish, DES, DESede, RC2, RCA]
          mode:
            displayName: Encryption Mode
            required: true
            type: string
            default: CBC
            enum: [CBC, CFB, ECB, OFB]
          key:
            displayName: Encryption Key
            description: |
              Based on the API configuraiton, the key might be provided by the server.
            type: string
            required: false
          value:
            displayName: Value
            description: Value that will be encrypted or decrypted.
            type: string
            required: true
    responses:
      200:
        body:
          application/json:
            type: property
            example:
              property: "8q5e1+jy0cND2iV2WPThahmz6XsDwB6Z"

/file:
  displayName: Encrypt Files
  description: Use the following syntax to encrypt or decrypt all values inside a properties file.
  post:
    body:
      multipart/form-data:
        properties:
          operation:
            displayName: Operation
            description: |
              Encrypt or decrypt all values inside a property file.
              Based on the API configuration, decrypting content might not be authorized.
            required: true
            default: encrypt
            type: string
            enum: [encrypt, decrypt]
          algorithm:
            displayName: Encryption Algorithm
            required: true
            default: AES
            type: string
            enum: [AES, Blowfish, DES, DESede, RC2, RCA]
          mode:
            displayName: Encryption Mode
            required: true
            type: string
            default: CBC
            enum: [CBC, CFB, ECB, OFB]
          key:
            displayName: Encryption Key
            description: |
              Based on the API configuraiton, the key might be provided by the server.
            type: string
            required: false
          inputFile:
            displayName: Input file location
            type: file
            fileTypes: ['text/yaml', 'application/x-yaml']
            maxLength: 10485760 # 10 MB = 10485760 Bytes
          outputFile:
            displayName: Output file name
            type: string
            default: secure-properties.yaml
            required: true

/file-level:
  displayName: Encrypt All the Content of a File
  description: Use the following syntax to encrypt or decrypt all the content of a properties file.
  post:
    body:
      multipart/form-data:
        properties:
          operation:
            displayName: Operation
            description: |
              Encrypt or decrypt all the content of a property file.
              Based on the API configuration, decrypting content might not be authorized.
            required: true
            default: encrypt
            type: string
            enum: [encrypt, decrypt]
          algorithm:
            displayName: Encryption Algorithm
            required: true
            default: AES
            type: string
            enum: [AES, Blowfish, DES, DESede, RC2, RCA]
          mode:
            displayName: Encryption Mode
            required: true
            type: string
            default: CBC
            enum: [CBC, CFB, ECB, OFB]
          key:
            displayName: Encryption Key
            description: |
              Based on the API configuraiton, the key might be provided by the server.
            type: string
            required: false
          inputFile:
            displayName: Input file
            type: file
            fileTypes: ['text/yaml', 'application/x-yaml']
            maxLength: 10485760 # 10 MB = 10485760 Bytes
          outputFile:
            displayName: Output file name
            type: string
            default: secure-properties.yaml
            required: true
